-- In the practical business use cases, you won't just retrive data from one table, rather you would be using
-- multiple tables to extract the data for that reason you would be using Joins

Use DEMO_DATABSE;


-- Inner Join

CREATE OR REPLACE TABLE Cows_1 (C_number int, C_Breed varchar(40));

INSERT INTO Cows_1(C_number,C_Breed) VALUES (1,'Holstein'),(2,'Guernsey'),(3,'Angus'),(4,'Mou'),(5,'Honey');

Select * from Cows_1;

CREATE OR REPLACE TABLE Cows_2 (C_number int, C_Vareity varchar(40));

INSERT INTO Cows_2(C_number,C_Vareity) VALUES (2,'Jersey'),(3,'Brownswiss'),(4,'Ayrishire');

Select c1.*,c2.C_Vareity from Cows_1 as c1 inner join Cows_2 as c2 on c1.C_number=c2.C_number;

-- Creating PETs and Owners Table

CREATE OR REPLACE TABLE SN_OWNER
(
   OwnerID INTEGER NOT NULL PRIMARY KEY ,
   Name VARCHAR2(20),
   Surname STRING,
   StreetAddress VARCHAR2(50),
   City STRING,
   State CHAR(4),
   StateFull STRING,
   ZipCode INTEGER
);

CREATE OR REPLACE TABLE SN_PETS
(
    PetID VARCHAR(10) NOT NULL PRIMARY KEY,
    Name VARCHAR(20),
    Kind STRING,
    Gender CHAR(7),
    Age INTEGER,
    OwnerID INTEGER NOT NULL REFERENCES OWNER 
);

Select * from SN_OWNER;
Select * from SN_PETS;

-- CREATE A TABLE USING OWNERS AND PETS CONTAINING OWNERS THOSE HAVING PETS
Select SN_OWNER.OwnerID,SN_OWNER.Name,SN_PETS.PetID,SN_PETS.Name,SN_PETS.Kind from SN_OWNER INNER JOIN SN_PETS  ON SN_OWNER.OwnerID = SN_PETS.OwnerID;


--- CREATE MASTER TABLE WHERE NO DUPLICATE COLUMN SOULD BE REPEATED

CREATE OR REPLACE TABLE SN_OWNER_PETS AS Select SN_OWNER.*,SN_PETS.PetID,SN_PETS.Name as Pet_Name,SN_PETS.Kind,SN_PETS.Gender,SN_PETS.Age from SN_OWNER INNER JOIN SN_PETS ON SN_OWNER.OwnerID = SN_PETS.OwnerID

Select * from SN_OWNER_PETS;


---- LEFT OUTER JOIN

-- In the case if I want to see all the owner whether they having Pet or not, In that case we use Left outer join
-- which gives all records from left table and 

-- Business use case - A campaign was lunched in christmas month to do more shopping to earn more revenue, if you buy TV
-- get 10% on fride.

 -- In this I want to get the data of all customers and the associate revenue of those customers
 -- and what about those customers did an enquiry and didn't buy anything, during the campgain I want to know how many customers
 -- did the transaction and the one who didn't.
 
 --- Interviwe questio - how the left will be selected, Ans - the records which has max number of records
 
 Select Count(*) from SN_OWNER_PETS;
 
CREATE OR REPLACE TABLE SN_OWNER_PETS AS Select SN_OWNER.*,SN_PETS.PetID,SN_PETS.Name as Pet_Name,SN_PETS.Kind,SN_PETS.Gender,SN_PETS.Age from SN_OWNER LEFT JOIN SN_PETS ON SN_OWNER.OwnerID = SN_PETS.OwnerID;
 
 -- 
 
 Select c1.*,c2.C_Vareity from Cows_1 as c1 Left join Cows_2 as c2 on c1.C_number=c2.C_number;

 
 -- Assignment of Creating 11 Tables and Creating a Master Table.
 
 -- Creating Brokers Table
 
Create or Replace Table BROKERS (BrokerID VARCHAR(10),BrokerCode VARCHAR(20),BrokerFullName CHAR(40),DistributionNetwork CHAR(40),DistributionChannel CHAR(40),CommissionScheme VARCHAR(30));

Select * from BROKERS;

--- Creating Products Table

Create or Replace Table Products (ProductID int,ProductCategory	char(40),ProductSubCategory char(40),Product varchar(40));

Select * from Products;
 
-- Creating Regions Table

Create or Replace Table Regions (id	int,name char(100),country varchar(100),state_code char(5),
state char(50),type char(50),latitude float(),
longitude float(),area_code int,population number(15),households number(15),
median_income number(15),land_area number(15),water_area number(15),
time_zone varchar(50));

Select * from Regions;

--- Creating of customers table
 
Create or Replace Table Customers(CustomerID int,LastName Char(40),FirstName Char(40),BirthDate	date,Gender char(10),ParticipantType Char(20),RegionID int,MaritalStatus varchar(10));

Select * from Customers;

--- Creating State table

Create or Replace Table State (State_Code char(10),State char(30),Region Char(20));

Select * from State;

-- Creating Prorities table

Create or Replace table Priority (ID int,Description char(20));

Select * from Priority;

-- Creating Status Table

Create or Replace Table Status (ID int,Description char(30));

Select * from Status;
-- Creating Category Table

Create or Replace Table Category (ID int, Description varchar(),Active int);

Select * from Category;

-- Creating Source Table

Create or Replace Table souce (ID int,Description char(30));

-- Creating Types Table

Create or Replace Table Types (ID int,Description char(30));

-- Creating Complaints Data Table

Create or Replace Table Compalaints(ID int,ComplainDate date,CompletionDate date,CustomerID number,BrokerID number,
                                    ProductID number,ComplainPriorityID int,ComplainTypeID int,ComplainSourceID int,
                                    ComplainCategoryID int,ComplainStatusID int,AdministratorID varchar,
                                    ClientSatisfaction char (10),ExpectedReimbursement float);
                                    
                                   
Select * from Compalaints;

-- Creating Master Table from all 11 Tables

Select * from Regions;

Select * from State;

--- Joing Regions and State Table and creating State_Region Table

Create or Replace Table State_Regions as Select Regions.*,State.Region from Regions Left join State ON Regions.state_code = State.State_Code; 

Select * from State_Regions;

--- Joining State_Regions with Status Table and Create State_Status;

Create or Replace table State_Status as Select State_Regions.*,Status.Description from State_Regions Left Join Status ON State_Regions.ID = Status.ID;

Select * from State_Status;

--- Joining Complaints Data with State_Status

Select * from Compalaints;

Select * from State_Status;

Create or Replace Table Complaints_1 as Select Compalaints.*,State_Status.Name,State_Status.Country,State_Status.State_Code,State_Status.State,State_Status.Type,
State_Status.Latitude,State_Status.Longitude,State_Status.Area_Code,State_Status.Population,State_Status.Households,
State_Status.Median_Income,State_Status.Land_Area,State_Status.Water_Area,State_Status.Time_Zone,
State_Status.Region,State_Status.Description as Status_Description
from Compalaints Left Join State_Status ON Compalaints.ComplainStatusID = State_Status.ID;

Select * from Complaints_1;

Select * from Priority;

 --- Join Complaints_1 with Rest of the Table
 
Create or Replace Table MasterTable_Complaints as Select Complaints_1.*,Brokers.BrokerCode,
 Brokers.BrokerFullName,
 Brokers.DistributionNetwork,Brokers.DistributionChannel,Brokers.CommissionScheme,
 Customers.LastName,Customers.FirstName,Customers.BirthDate,Customers.Gender,
 Customers.ParticipantType,Customers.RegionID,Customers.MaritalStatus,
 Products.ProductCategory,Products.ProductSubCategory,Products.Product,Priority.Description as Product_Descritpion,
 Types.Description as Type_Description,Category.Description as Category_Description
from Complaints_1
LEFT JOIN Brokers ON Complaints_1.BrokerID = Brokers.BrokerID
LEFT JOIN Customers ON Complaints_1.CustomerID = Customers.CustomerID
LEFT JOIN Products ON Complaints_1.ProductID = Products.ProductID
LEFT JOIN Priority ON Complaints_1.ComplainPriorityID = Priority.ID
LEFT JOIN Types ON Complaints_1.ComplainTypeID = Types.ID
LEFT JOIN souce ON  Complaints_1.ComplainSourceID = souce.ID
LEFT JOIN Category ON  Complaints_1.ComplainCategoryID = Category.ID;

Select * from MasterTable_Complaints;

